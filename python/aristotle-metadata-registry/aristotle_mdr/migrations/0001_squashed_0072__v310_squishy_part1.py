# Generated by Django 2.2.4 on 2019-10-16 09:37

import aristotle_mdr.fields
import autoslug.fields
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True
    replaces = [
        ('aristotle_mdr', '0001_initial'),
        ('aristotle_mdr', '0002_auto_20150409_0656'),
        ('aristotle_mdr', '0003_auto_20150416_0024'),
        ('aristotle_mdr', '0004_auto_20150424_0059'),
        ('aristotle_mdr', '0005_auto_20150526_1058'),
        ('aristotle_mdr', '0006_remove_status_indictionary'),
        ('aristotle_mdr', '0007_rename_description_fields'),
        ('aristotle_mdr', '0008_auto_20151216_0339'),
        ('aristotle_mdr', '0009_add_explicit_related_name_for_values'),
        ('aristotle_mdr', '0010_auto_20160106_1814'),
        ('aristotle_mdr', '0011_update_ckeditor_remove_d19_errors'),
        ('aristotle_mdr', '0012_better_workflows'),
        ('aristotle_mdr', '0013_concept_field_fixer_part1'),
        ('aristotle_mdr', '0014_concept_field_fixer_part2'),
        ('aristotle_mdr', '0015_concept_field_fixer_part3'),
        ('aristotle_mdr', '0016_auto_20160919_1939'),
        ('aristotle_mdr', '0017_add_organisations'),
        ('aristotle_mdr', '0001_squashed_0017_add_organisations'),
        ('aristotle_mdr', '0018_improve_request_reviews'),
        ('aristotle_mdr', '0019_change_dataelementderives_to_m2m'),
        ('aristotle_mdr', '0020_add_uuids'),
        ('aristotle_mdr', '0021_add_name_and_meaning_to_conceptual'),
        ('aristotle_mdr', '0022_switch_to_concept_relations'),
        ('aristotle_mdr', '0023_auto_20180206_0332'),
        ('aristotle_mdr', '0024_synonym_data_migration'),
        ('aristotle_mdr', '0025_remove__concept_synonyms'),
        ('aristotle_mdr', '0026_auto_20180411_2323'),
        ('aristotle_mdr', '0027_add_ded_through_models'),
        ('aristotle_mdr', '0028_replace_old_ded_through'),
        ('aristotle_mdr', '0029_remove__concept_short_name'),
        ('aristotle_mdr', '0030_auto_20180621_0217'),
        ('aristotle_mdr', '0031_auto_20180629_0143'),
        ('aristotle_mdr', '0032_add_new_active'),
        ('aristotle_mdr', '0033_ra_levels'),
        ('aristotle_mdr', '0034_remove_old_active'),
        ('aristotle_mdr', '0035_auto_20180817_0512'),
        ('aristotle_mdr', '0036_add_origin'),
        ('aristotle_mdr', '0037_make_name_shorttext'),
        ('aristotle_mdr', '0038_sandboxshare'),
        ('aristotle_mdr', '0039_auto_20180828_1926'),
        ('aristotle_mdr', '0040_rename_favourites'),
        ('aristotle_mdr', '0041_migrate_favourites'),
        ('aristotle_mdr', '0042_remove_possumprofile_favourites'),
        ('aristotle_mdr', '0043_change_superseding'),
        ('aristotle_mdr', '0044_remove__concept_superseded_by'),
        ('aristotle_mdr', '0045__concept_superseded_by_items'),
        ('aristotle_mdr', '0046_auto_20181107_0433'),
        ('aristotle_mdr', '0047_auto_20181217_0926'),
        ('aristotle_mdr', '0048_auto_20181223_1134'),
        ('aristotle_mdr', '0049_make_non_nullable_so'),
        ('aristotle_mdr', '0050_auto_20190204_2227'),
        ('aristotle_mdr', '0051_auto_20190216_0455'),
        ('aristotle_mdr', '0052_auto_20190218_0417'),
        ('aristotle_mdr', '0053_auto_20190226_0536'),
        ('aristotle_mdr', '0054_auto_20190313_1944'),
        ('aristotle_mdr', '0055_auto_20190313_1947'),
        ('aristotle_mdr', '0056_auto_20190313_2144'),
        ('aristotle_mdr', '0057_auto_20190329_1609'),
        ('aristotle_mdr', '0058_auto_20190502_0853'),
        ('aristotle_mdr', '0059_auto_20190502_1036'),
        ('aristotle_mdr', '0060_organizationrecord_recordrelation'),
        ('aristotle_mdr', '0061_auto_20190503_1505'),
        ('aristotle_mdr', '0062_auto_20190517_1016'),
        ('aristotle_mdr', '0063_auto_20190515_1942'),
        ('aristotle_mdr', '0064_type_data'),
        ('aristotle_mdr', '0065_auto_20190529_1048'),
        ('aristotle_mdr', '0066_auto_20190530_1944'),
        ('aristotle_mdr', '0067_auto_20190605_1538'),
        ('aristotle_mdr', '0069_auto_20190801_1119'),
        ('aristotle_mdr', '0070_auto_20190809_1233'),
        ('aristotle_mdr', '0071_auto_20190809_1341'),
        ('aristotle_mdr', '0072_auto_20190809_1502'),
        # ('aristotle_mdr', '0073_auto_20190814_1520'),
        # ('aristotle_mdr', '0074_auto_20190908_0648'),
        # ('aristotle_mdr', '0075_auto_20190916_1602'),
    ]
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='_concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid1, editable=False, help_text='Universally-unique Identifier. Uses UUID1 as this improves uniqueness and tracking between registries', unique=True)),
                ('name', aristotle_mdr.fields.ShortTextField(help_text='The primary name used for human identification purposes.')),
                ('definition', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', help_text='Representation of a concept by a descriptive statement which serves to differentiate it from related concepts. (3.2.39)', verbose_name='definition')),
                ('_is_public', models.BooleanField(default=False)),
                ('_is_locked', models.BooleanField(default=False)),
                ('version', models.CharField(blank=True, max_length=20)),
                ('references', ckeditor_uploader.fields.RichTextUploadingField(blank=True)),
                ('origin_URI', models.URLField(blank=True, help_text='If imported, the original location of the item')),
                ('origin', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='The source (e.g. document, project, discipline or model) for the item (8.1.2.2.3.5)')),
                ('comments', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Descriptive comments about the metadata item (8.1.2.2.3.4)')),
                ('_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'item',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid1, editable=False, help_text='Universally-unique Identifier. Uses UUID1 as this improves uniqueness and tracking between registries', unique=True)),
                ('name', aristotle_mdr.fields.ShortTextField(help_text='The primary name used for human identification purposes.')),
                ('definition', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', help_text='Representation of a concept by a descriptive statement which serves to differentiate it from related concepts. (3.2.39)', verbose_name='definition')),
                ('uri', models.URLField(blank=True, help_text='uri for Organization', null=True)),
                ('managers', models.ManyToManyField(blank=True, related_name='organization_manager_in', to=settings.AUTH_USER_MODEL, verbose_name='Managers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganizationRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid1, editable=False, help_text='Universally-unique Identifier. Uses UUID1 as this improves uniqueness and tracking between registries', unique=True)),
                ('name', aristotle_mdr.fields.ShortTextField(help_text='The primary name used for human identification purposes.')),
                ('definition', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', help_text='Representation of a concept by a descriptive statement which serves to differentiate it from related concepts. (3.2.39)', verbose_name='definition')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PossumProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profilePictureWidth', models.IntegerField(blank=True, null=True)),
                ('profilePictureHeight', models.IntegerField(blank=True, null=True)),
                ('profilePicture', aristotle_mdr.fields.ConvertedConstrainedImageField(blank=True, content_types=['image/jpg', 'image/png', 'image/bmp', 'image/jpeg', 'image/x-ms-bmp'], height_field='profilePictureHeight', js_checker=True, max_upload_size=10485760, mime_lookup_length=4096, null=True, upload_to='', width_field='profilePictureWidth')),
                ('notificationPermissions', jsonfield.fields.JSONField(default={'discussions': {'new comments': True, 'new posts': True}, 'issues': {'any items I can edit': True, 'items I have tagged / favourited': True, 'items in my workgroups': True}, 'metadata changes': {'general changes': {'any items I can edit': True, 'items I have tagged / favourited': True, 'items in my workgroups': True}, 'new items': {'new items in my workgroups': True}, 'superseded': {'any items I can edit': True, 'items I have tagged / favourited': True, 'items in my workgroups': True}}, 'notification methods': {'email': False, 'within aristotle': True}, 'registrar': {'item changed status': True, 'item registered': True, 'item superseded': True, 'review request created': True, 'review request updated': True}})),
            ],
        ),
        migrations.CreateModel(
            name='StewardOrganisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', autoslug.fields.AutoSlugField(editable=True, populate_from='name', unique=True)),
                ('uuid', models.UUIDField(default=uuid.uuid1, editable=False, unique=True)),
                ('name', models.TextField(help_text='The primary name used for human identification purposes.')),
                ('state', models.CharField(choices=[('active', 'Active'), ('private', 'Private'), ('archived', 'Deactivated & Visible'), ('hidden', 'Deactivated & Hidden')], default='active', help_text='Status of this group', max_length=128)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(help_text='Representation of a concept by a descriptive statement which serves to differentiate it from related concepts. (3.2.39)', verbose_name='definition')),
            ],
            options={
                'verbose_name': 'Steward Organisation',
            },
        ),
        migrations.CreateModel(
            name='Workgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('slug', autoslug.fields.AutoSlugField(editable=True, populate_from='name', unique=True)),
                ('uuid', models.UUIDField(default=uuid.uuid1, editable=False, unique=True)),
                ('name', models.TextField(help_text='The primary name used for human identification purposes.')),
                ('state', models.CharField(choices=[('active', 'Active'), ('archived', 'Deactivated & Visible'), ('hidden', 'Deactivated & Hidden')], default='active', help_text='Status of this group', max_length=128)),
                ('archived', models.BooleanField(default=False, help_text='Archived workgroups can no longer have new items or discussions created within them.', verbose_name='Archived')),
                ('definition', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Representation of a concept by a descriptive statement which serves to differentiate it from related concepts. (3.2.39)', null=True, verbose_name='definition')),
                ('stewardship_organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.StewardOrganisation', to_field='uuid')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptualDomain',
            fields=[
                ('_concept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr._concept')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Description or specification of a rule, reference, or range for a set of all value meanings for a Conceptual Domain', verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
            bases=('aristotle_mdr._concept',),
        ),
        migrations.CreateModel(
            name='DataElement',
            fields=[
                ('_concept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr._concept')),
            ],
            options={
                'abstract': False,
            },
            bases=('aristotle_mdr._concept',),
        ),
        migrations.CreateModel(
            name='DataElementDerivation',
            fields=[
                ('_concept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr._concept')),
                ('derivation_rule', models.TextField(blank=True, help_text='text of a specification of a data element Derivation_Rule')),
            ],
            options={
                'abstract': False,
            },
            bases=('aristotle_mdr._concept',),
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('_concept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr._concept')),
            ],
            options={
                'abstract': False,
            },
            bases=('aristotle_mdr._concept',),
        ),
        migrations.CreateModel(
            name='ObjectClass',
            fields=[
                ('_concept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr._concept')),
            ],
            options={
                'verbose_name_plural': 'Object Classes',
            },
            bases=('aristotle_mdr._concept',),
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('_concept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr._concept')),
            ],
            options={
                'verbose_name_plural': 'Properties',
            },
            bases=('aristotle_mdr._concept',),
        ),
        migrations.CreateModel(
            name='RegistrationAuthority',
            fields=[
                ('organization_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr.Organization')),
                ('active', models.IntegerField(choices=[(0, 'Active & Visible'), (1, 'Inactive & Visible'), (2, 'Inactive & Hidden')], default=0, help_text='Setting this to Inactive will disable all further registration actions')),
                ('locked_state', models.IntegerField(choices=[(0, 'Not Progressed'), (1, 'Incomplete'), (2, 'Candidate'), (3, 'Recorded'), (4, 'Qualified'), (5, 'Standard'), (6, 'Preferred Standard'), (7, 'Superseded'), (8, 'Retired')], default=2, help_text="When metadata is endorsed at  the specified 'locked' level, the metadata item will not longer be able to be altered by standard users. Only Workgroup or Organisation Stewards will be able to edit 'locked' metadata.")),
                ('public_state', models.IntegerField(choices=[(0, 'Not Progressed'), (1, 'Incomplete'), (2, 'Candidate'), (3, 'Recorded'), (4, 'Qualified'), (5, 'Standard'), (6, 'Preferred Standard'), (7, 'Superseded'), (8, 'Retired')], default=3, help_text="When metadata is endorsed at the specified 'public' level, the metadata item will be visible to all users")),
                ('notprogressed', models.TextField(blank=True, help_text="A description of the meaning of the 'Not Progressed' status level for this Registration Authority.", verbose_name='Not Progressed')),
                ('incomplete', models.TextField(blank=True, help_text="A description of the meaning of the 'Incomplete' status level for this Registration Authority.", verbose_name='Incomplete')),
                ('candidate', models.TextField(blank=True, help_text="A description of the meaning of the 'Candidate' status level for this Registration Authority.", verbose_name='Candidate')),
                ('recorded', models.TextField(blank=True, help_text="A description of the meaning of the 'Recorded' status level for this Registration Authority.", verbose_name='Recorded')),
                ('qualified', models.TextField(blank=True, help_text="A description of the meaning of the 'Qualified' status level for this Registration Authority.", verbose_name='Qualified')),
                ('standard', models.TextField(blank=True, help_text="A description of the meaning of the 'Standard' status level for this Registration Authority.", verbose_name='Standard')),
                ('preferred', models.TextField(blank=True, help_text="A description of the meaning of the 'Preferred Standard' status level for this Registration Authority.", verbose_name='Preferred Standard')),
                ('superseded', models.TextField(blank=True, help_text="A description of the meaning of the 'Superseded' status level for this Registration Authority.", verbose_name='Superseded')),
                ('retired', models.TextField(blank=True, help_text="A description of the meaning of the 'Retired' status level for this Registration Authority.", verbose_name='Retired')),
                ('registrars', models.ManyToManyField(blank=True, related_name='registrar_in', to=settings.AUTH_USER_MODEL, verbose_name='Registrars')),
                ('stewardship_organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.StewardOrganisation', to_field='uuid')),
            ],
            options={
                'verbose_name_plural': 'Registration Authorities',
            },
            bases=('aristotle_mdr.organization',),
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('_concept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr._concept')),
                ('symbol', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Units Of Measure',
            },
            bases=('aristotle_mdr._concept',),
        ),
        migrations.CreateModel(
            name='SupersedeRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('proposed', models.BooleanField(default=False, help_text='Whether this is a proposal or an active supersedes relation')),
                ('message', models.TextField(blank=True, null=True)),
                ('date_effective', models.DateField(blank=True, help_text='The date the superseding relationship became effective.', null=True, verbose_name='Date effective')),
                ('newer_item', aristotle_mdr.fields.ConceptForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='superseded_items_relation_set', to='aristotle_mdr._concept')),
                ('older_item', aristotle_mdr.fields.ConceptForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='superseded_by_items_relation_set', to='aristotle_mdr._concept')),
                # ('review', aristotle_mdr.fields.ConceptForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supersedes', to='aristotle_mdr_review_requests.ReviewRequest')),
                ('registration_authority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.RegistrationAuthority')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SandboxShare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid1, editable=False, help_text='Universally-unique Identifier. Uses UUID1 as this improves uniqueness and tracking between registries', unique=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('emails', jsonfield.fields.JSONField()),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='share', to='aristotle_mdr.PossumProfile')),
            ],
        ),
        migrations.CreateModel(
            name='RecordRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('type', models.CharField(choices=[('s', 'Submitting Organization'), ('r', 'Responsible Organization')], max_length=1)),
                ('concept', aristotle_mdr.fields.ConceptForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org_records', to='aristotle_mdr._concept')),
                ('organization_record', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='aristotle_mdr.OrganizationRecord')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='possumprofile',
            name='savedActiveWorkgroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.Workgroup'),
        ),
        migrations.AddField(
            model_name='possumprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organizationrecord',
            name='stewardship_organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.StewardOrganisation', to_field='uuid'),
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid1, editable=False, help_text='Universally-unique Identifier. Uses UUID1 as this improves uniqueness and tracking between registries', unique=True)),
                ('name', aristotle_mdr.fields.ShortTextField(help_text='The primary name used for human identification purposes.')),
                ('definition', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', help_text='Representation of a concept by a descriptive statement which serves to differentiate it from related concepts. (3.2.39)', verbose_name='definition')),
                ('stewardship_organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.StewardOrganisation', to_field='uuid')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscussionPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('body', models.TextField()),
                ('title', models.CharField(max_length=256)),
                ('closed', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('relatedItems', models.ManyToManyField(blank=True, related_name='relatedDiscussions', to='aristotle_mdr._concept')),
                ('workgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to='aristotle_mdr.Workgroup')),
            ],
            options={
                'ordering': ['-modified'],
            },
        ),
        migrations.CreateModel(
            name='DiscussionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('body', models.TextField()),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='aristotle_mdr.DiscussionPost')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.AddField(
            model_name='_concept',
            name='stewardship_organisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='aristotle_mdr.StewardOrganisation', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='_concept',
            name='submitter',
            field=models.ForeignKey(blank=True, help_text='This is the person who first created an item. Users can always see items they made.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='_concept',
            name='superseded_by_items',
            field=aristotle_mdr.fields.ConceptManyToManyField(related_name='superseded_items', through='aristotle_mdr.SupersedeRelationship', to='aristotle_mdr._concept'),
        ),
        migrations.AddField(
            model_name='_concept',
            name='workgroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='aristotle_mdr.Workgroup'),
        ),
        migrations.CreateModel(
            name='WorkgroupMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('manager', 'Manager'), ('steward', 'Steward'), ('submitter', 'Submitter'), ('viewer', 'Viewer')], help_text='Role within this group', max_length=128)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='aristotle_mdr.Workgroup', to_field='uuid')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.CreateModel(
            name='ValueMeaning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The semantic content of a possible value (3.2.141)', max_length=255)),
                ('definition', models.TextField(blank=True, help_text='The semantic definition of a possible value', null=True)),
                ('order', models.PositiveSmallIntegerField(verbose_name='Position')),
                ('start_date', models.DateField(blank=True, help_text='Date at which the value meaning became valid', null=True)),
                ('end_date', models.DateField(blank=True, help_text='Date at which the value meaning ceased to be valid', null=True)),
                ('conceptual_domain', aristotle_mdr.fields.ConceptForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.ConceptualDomain', verbose_name='Conceptual Domain')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ValueDomain',
            fields=[
                ('_concept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr._concept')),
                ('format', models.CharField(blank=True, help_text='template for the structure of the presentation of the value(s)', max_length=100, null=True)),
                ('maximum_length', models.PositiveIntegerField(blank=True, help_text='maximum number of characters available to represent the Data Element value', null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Description or specification of a rule, reference, or range for a set of all values for a Value Domain.', verbose_name='Description')),
                # ('classification_scheme', aristotle_mdr.fields.ConceptForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valueDomains', to='aristotle_mdr_backwards.ClassificationScheme', verbose_name='Classification Scheme')),
                ('conceptual_domain', aristotle_mdr.fields.ConceptForeignKey(blank=True, help_text='The Conceptual Domain that this Value Domain which provides representation.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.ConceptualDomain', verbose_name='Conceptual Domain')),
                ('data_type', aristotle_mdr.fields.ConceptForeignKey(blank=True, help_text='Datatype used in a Value Domain', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.DataType', verbose_name='Data Type')),
                # ('representation_class', aristotle_mdr.fields.ConceptForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='value_domains', to='aristotle_mdr_backwards.RepresentationClass', verbose_name='Representation Class')),
                ('unit_of_measure', aristotle_mdr.fields.ConceptForeignKey(blank=True, help_text='Unit of Measure used in a Value Domain', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.UnitOfMeasure', verbose_name='Unit Of Measure')),
            ],
            options={
                'abstract': False,
            },
            bases=('aristotle_mdr._concept',),
        ),
        migrations.AddField(
            model_name='unitofmeasure',
            name='measure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.Measure'),
        ),
        migrations.CreateModel(
            name='SupplementaryValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', aristotle_mdr.fields.ShortTextField(help_text='the actual value of the Value')),
                ('meaning', aristotle_mdr.fields.ShortTextField(blank=True, help_text="A textual designation of a value, where a relation to a Value meaning doesn't exist")),
                ('order', models.PositiveSmallIntegerField(verbose_name='Position')),
                ('start_date', models.DateField(blank=True, help_text='Date at which the value became valid', null=True)),
                ('end_date', models.DateField(blank=True, help_text='Date at which the value ceased to be valid', null=True)),
                ('value_meaning', models.ForeignKey(blank=True, help_text='A reference to the value meaning that this designation relates to', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.ValueMeaning')),
                ('valueDomain', aristotle_mdr.fields.ConceptForeignKey(help_text='Enumerated Value Domain that this value meaning relates to', on_delete=django.db.models.deletion.CASCADE, related_name='supplementaryvalue_set', to='aristotle_mdr.ValueDomain', verbose_name='Value Domain')),
            ],
            options={
                'verbose_name': 'Supplementary Value',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StewardOrganisationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('steward', 'Steward'), ('member', 'Member')], help_text='Role within this group', max_length=128)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='aristotle_mdr.StewardOrganisation', to_field='uuid')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('changeDetails', models.TextField(blank=True, null=True, verbose_name='Change details')),
                ('state', models.IntegerField(choices=[(0, 'Not Progressed'), (1, 'Incomplete'), (2, 'Candidate'), (3, 'Recorded'), (4, 'Qualified'), (5, 'Standard'), (6, 'Preferred Standard'), (7, 'Superseded'), (8, 'Retired')], default=1, help_text='Designation (3.2.51) of the status in the registration life-cycle of an Administered_Item', verbose_name='State')),
                ('registrationDate', models.DateField(help_text='Date and time an Administered_Item became/becomes available to registry users.', verbose_name='Date registration effective')),
                ('until_date', models.DateField(blank=True, help_text='Date and time the Registration of an Administered_Item by a Registration_Authority in a registry is no longer effective.', null=True, verbose_name='Date registration expires')),
                ('concept', aristotle_mdr.fields.ConceptForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='aristotle_mdr._concept')),
                ('registrationAuthority', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.RegistrationAuthority')),
            ],
            options={
                'verbose_name_plural': 'Statuses',
            },
        ),
        migrations.CreateModel(
            name='PermissibleValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', aristotle_mdr.fields.ShortTextField(help_text='the actual value of the Value')),
                ('meaning', aristotle_mdr.fields.ShortTextField(blank=True, help_text="A textual designation of a value, where a relation to a Value meaning doesn't exist")),
                ('order', models.PositiveSmallIntegerField(verbose_name='Position')),
                ('start_date', models.DateField(blank=True, help_text='Date at which the value became valid', null=True)),
                ('end_date', models.DateField(blank=True, help_text='Date at which the value ceased to be valid', null=True)),
                ('value_meaning', models.ForeignKey(blank=True, help_text='A reference to the value meaning that this designation relates to', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.ValueMeaning')),
                ('valueDomain', aristotle_mdr.fields.ConceptForeignKey(help_text='Enumerated Value Domain that this value meaning relates to', on_delete=django.db.models.deletion.CASCADE, related_name='permissiblevalue_set', to='aristotle_mdr.ValueDomain', verbose_name='Value Domain')),
            ],
            options={
                'verbose_name': 'Permissible Value',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='DedInputsThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Position')),
                ('data_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.DataElement')),
                ('data_element_derivation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.DataElementDerivation')),
            ],
            options={
                'ordering': ['order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DedDerivesThrough',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Position')),
                ('data_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.DataElement')),
                ('data_element_derivation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aristotle_mdr.DataElementDerivation')),
            ],
            options={
                'ordering': ['order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataElementConcept',
            fields=[
                ('_concept_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='aristotle_mdr._concept')),
                ('conceptualDomain', aristotle_mdr.fields.ConceptForeignKey(blank=True, help_text='references a Conceptual_Domain that is part of the specification of the Data_Element_Concept', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.ConceptualDomain', verbose_name='Conceptual Domain')),
                ('objectClass', aristotle_mdr.fields.ConceptForeignKey(blank=True, help_text='references an Object_Class that is part of the specification of the Data_Element_Concept', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.ObjectClass', verbose_name='Object Class')),
                ('property', aristotle_mdr.fields.ConceptForeignKey(blank=True, help_text='references a Property that is part of the specification of the Data_Element_Concept', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.Property', verbose_name='Property')),
            ],
            options={
                'abstract': False,
            },
            bases=('aristotle_mdr._concept',),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='dataElementConcept',
            field=aristotle_mdr.fields.ConceptForeignKey(blank=True, help_text='binds with a Value_Domain that describes a set of possible values that may be recorded in an instance of the Data_Element', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.DataElementConcept', verbose_name='Data Element Concept'),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='valueDomain',
            field=aristotle_mdr.fields.ConceptForeignKey(blank=True, help_text='binds with a Data_Element_Concept that provides the meaning for the Data_Element', null=True, on_delete=django.db.models.deletion.SET_NULL, to='aristotle_mdr.ValueDomain', verbose_name='Value Domain'),
        ),
        migrations.AddIndex(
            model_name='_concept',
            index=models.Index(fields=['uuid'], name='aristotle_m_uuid_6cec97_idx'),
        ),
    ]
