sudo: false
dist: xenial

defaults:
  - &main_test_script_py36
    language: python
    python: 3.6
    install:
      - pip install codecov coveralls
      - pip install 'tox>=3.0'
      - nvm install 10.13.0
    before_script:
      ./scripts/main_before_script.sh
    script:
      ./scripts/main_script.sh
    services:
      - postgresql
      - redis-server
      - elasticsearch
      - mariadb
    addons:
      postgresql: 9.4
      apt:
        sources:
          - elasticsearch-5.x
        packages:
          - elasticsearch
          - libmariadb-client-lgpl-dev

      code_climate:
        repo_token: ac63d774ebdd641ef502acf1588b36248726a28a50e4e1f4ba4295a157477f54
      mariadb: '10.1'

  - &test_accessibility_py36
    language: python
    python: 3.6
    install:
      - pip install codecov coveralls
      - pip install 'tox>=3.0'
      - nvm install 10.13.0
    before_script:
      ./scripts/run_npm_commands.sh
    script:
      tox -e dj-linux-ally-$ALLY-module_amr

matrix:
  include:

    - stage: "Style Check"
      name: "Python Lint"
      language: python
      python: 3.6
      install:
        - pip install codecov coveralls
        - pip install 'tox>=3.0'
      script: tox -e flake8

    - name: "Python Type Checking"
      language: python
      python: 3.6
      install:
        - pip install mypy
      script: ./scripts/type.sh

    - name: "JS Lint"
      language: node_js
      node_js: 10
      before_install:
        - cd assets
      install:
        - npm install
      script:
        - npm run lint

    - stage: "Documentation"
      name: "Documentation"
      language: python
      python: 3.6
      env:
        DATABASE_URL=postgresql://postgres:@localhost/aristotle_test_db
      install:
        - pip install codecov coveralls
        - pip install 'tox>=3.0'
      script: tox -e docs

    # FRONTEND JAVASCRIPT TESTS:
    - stage: "Frontend"
      name: "Javascript Tests"
      language: node_js
      node_js: 10
      before_install:
        - cd assets
      install:
        - npm install
      script:
        - npm run test

    # THESE CONCURRENT JOBS MUST ALWAYS BE RUN FOR THE MAIN ARISTOTLE REPO.
    # THEY INCLUDE OUR USUAL SETUP COMBINATION (POSTGRES DB AND ELASTIC SEARCH ENGINE)
    # MODULES ARE ALSO RUN CONCURRENTLY IN THIS STAGE.
    - stage: "Aristotle Postgres DB and Elastic Search setup Python Tests"
      name: "Aristotle Tests Postgres/Elasticsearch"
      env: DB=postgres  SEARCH=elastic MODULE=amr
      <<: *main_test_script_py36

    - name: "Dataset Extension Tests"
      env: DB=postgres   SEARCH=elastic MODULE=dse
      <<: *main_test_script_py36

    - name: "Comet Extension Tests"
      env: DB=postgres   SEARCH=elastic MODULE=cir
      <<: *main_test_script_py36

    - name: "Graphql Tests"
      env: DB=postgres   SEARCH=elastic MODULE=gql
      <<: *main_test_script_py36

    - name: "API Tests"
      env: DB=postgres   SEARCH=elastic MODULE=api
      <<: *main_test_script_py36

    # THE FOLLOWING JOBS ARE ONLY RUN IF TYPE OF GIT COMMAND = PUSH:
    # THESE TESTS REPRESENT DIFFERENT DATABASE AND SEARCH ENGINE SETUPS FOR ARISTOTLE.
    - stage: "Aristotle Metadata Registry Python Tests (Testing different database and search-engine combinations)."
      name: "Aristotle Tests Sqlite/Elasticsearch"
      if: type = push
      env: DB=sqlite  SEARCH=elastic MODULE=amr
      <<: *main_test_script_py36

    - name: "Aristotle Tests Postgres/Whoosh"
      if: type = push
      env: DB=postgres  SEARCH=whoosh MODULE=amr
      <<: *main_test_script_py36

    - name: "Aristotle Tests MariaDB/Whoosh"
      if: type = push
      env: DB=mariadb   SEARCH=whoosh MODULE=amr
      <<: *main_test_script_py36

    - name: "Aristotle Tests MariaDB/Elasticsearch"
      if: type = push
      env: DB=mariadb   SEARCH=elastic MODULE=amr
      <<: *main_test_script_py36

    - name: "Aristotle Tests Sqlite/Whoosh"
      if: type = push
      env: DB=sqlite    SEARCH=whoosh MODULE=amr
      <<: *main_test_script_py36

    # ACCESSIBILITY TESTS:
    - stage: "Accessibility"
      name: "Accessibility Tests Metadata Item"
      <<: *test_accessibility_py36
      env: ALLY=metadata_item MODULE=aristotle-metadata-registry
    - name: "Accessibility Tests Metadata Action"
      <<: *test_accessibility_py36
      env: ALLY=metadata_action MODULE=aristotle-metadata-registry
    - name: "Accessibility Tests Static"
      <<: *test_accessibility_py36
      env: ALLY=static MODULE=aristotle-metadata-registry

    # DEPLOYMENT (ONLY IF THE BRANCH IS THE MASTER BRANCH).:
    - stage: "Deployment"
      name: "Deployment"
      if: branch = master
      install: skip
      script: ./scripts/buildandcopy.sh --manual

after_success:
  - ./scripts/coverage_reporter.sh $MODULE

notifications:
  webhooks: https://outlook.office.com/webhook/4fa8f482-f261-4599-b76a-ba888c6820aa@1f298417-594f-4f6d-9bdb-8de767590d70/TravisCI/f4b13393a46b434288af9a0b1b2d4db1/1dbc8307-f5fb-45a9-b87f-4e128b5d9895

env:
  global:
    - AWS_DEFAULT_REGION=ap-southeast-2
    - PATH=$HOME/.local/bin:$PATH