[tox]
toxworkdir=/tmp/tox
skipsdist = True
envlist =
    dj{1.11}-{test}-{azure,linux}-db-{postgres,mariadb,sqlite,mssql}-search-{elastic,whoosh}-module_{amr,dse,cir,apd,gql,api}
    dj{1.11}-{linux}-ally-{metadata_item,metadata_action,static}-module_amr
    docs
    flake8
    localtest

[testenv]
passenv =
    HOME # required for pipenv
    db: DATABASE_URL
    LC_ALL
    LANG
    ARISTOTLE_DEV_SKIP_MIGRATIONS
    SEARCH
    VARIANT
    DJANGO_VERSION
    PYODBC_FILE
    TRAVIS
    WINDIR

setenv =
    TOXDIR = {envdir}
    aristotlemdr__BASE_DIR = {envdir}

    ally: ARISTOTLE_DEV_SKIP_MIGRATIONS = 1
    ally: DATABASE_URL=sqlite:////tmp/ally-db.db
    search-elastic: SEARCH=elastic
    search-whoosh: SEARCH=whoosh
    db-sqlite: DB=sqlite
    db-postgres: DB=postgres
    db-mariadb: DB=mariadb

    module_amr: DJANGO_SETTINGS_MODULE = aristotle_mdr.tests.settings.settings
    module_dse: DJANGO_SETTINGS_MODULE = aristotle_dse.tests.settings
    module_cir: DJANGO_SETTINGS_MODULE = comet.tests.settings
    module_apd: DJANGO_SETTINGS_MODULE = aristotle_pdf.tests.settings
    module_gql: DJANGO_SETTINGS_MODULE = aristotle_mdr_graphql.tests.settings
    module_api: DJANGO_SETTINGS_MODULE = aristotle_mdr_api.tests.settings

    module_amr: MODULE_NAME = aristotle_mdr
    module_dse: MODULE_NAME = aristotle_dse
    module_cir: MODULE_NAME = comet
    module_apd: MODULE_NAME = aristotle_pdf
    module_gql: MODULE_NAME = aristotle_mdr_graphql
    module_api: MODULE_NAME = aristotle_mdr_api

    module_amr: MODULE_PATH = {toxinidir}/python/aristotle-metadata-registry
    module_dse: MODULE_PATH = {toxinidir}/python/aristotle-dataset-extensions
    module_cir: MODULE_PATH = {toxinidir}/python/comet-indicator-registry
    module_apd: MODULE_PATH = {toxinidir}/python/aristotle-pdf-downloads
    module_gql: MODULE_PATH = {toxinidir}/python/aristotle-mdr-graphql
    module_api: MODULE_PATH = {toxinidir}/python/aristotle-mdr-api


platform =
    azure: win32
    linux: linux

deps =
    pipenv==11.8.2
    pip>8.1.1
    setuptools>34.0

    # dj1.11:   Django>=1.11,<2.0

    db-postgres: psycopg2
    db-mariadb:  mysqlclient

    search-elastic: elasticsearch>=5.0.0,<6.0.0
    search-elastic: django-haystack-elasticsearch

    azure: pypiwin32
    azure: lxml<4.0.0
    db-mssql: pyodbc

    db-mssql-dj1.11:   django_pyodbc_azure>=1.11,<2.0

commands =
    pipenv install --dev
    pipenv graph

    module_api: {envbindir}/django-admin.py collectstatic

    !ally: coverage run --branch --source={env:MODULE_PATH}/{env:MODULE_NAME} {envbindir}/django-admin.py test {env:MODULE_NAME}

    ally-static: coverage run --branch --source=aristotle_mdr {envbindir}/django-admin.py test aristotle_mdr.tests.accessibility.TestStaticPageAccessibility
    ally-metadata_item: coverage run --branch --source=aristotle_mdr {envbindir}/django-admin.py test aristotle_mdr.tests.accessibility.TestMetadataItemPageAccessibility
    ally-metadata_action: coverage run --branch --source=aristotle_mdr {envbindir}/django-admin.py test aristotle_mdr.tests.accessibility.TestMetadataActionPageAccessibility

[testenv:flake8]
deps =
    flake8
commands=
    flake8
skip_missing_interpreters = True

[testenv:docs]
commands=
    sphinx-build -nW -b html -d {envtmpdir}/doctrees {toxinidir}/docs {envtmpdir}/html
deps =
    -r docs/requirements.txt

[testenv:azure]
basepython = %PYTHON_HOME%\python.exe

[testenv:localtest]
passenv=
    DJANGO_SETTINGS_MODULE
envdir=./.venv
commands=
    {envbindir}/django-admin.py test {posargs}
